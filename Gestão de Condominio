using System;
using System.Collections.Generic;
using System.Linq;

public class Condominio{
    
    public bool Pagamento {get; set; }
    public float VlrDespesas {get; set; }
    public float vlrCaixa {get; set; }
    
    public Condominio (bool pagamento, float gastos, float caixa){
    
        Pagamento = pagamento;
        VlrDespesas = gastos; // criando objeto para reter dados do condominio
        vlrCaixa = caixa;
    }
}

public class Moradores{
    
    public string Nome {get; set; }//criando objeto reter dados dos moradores
    public string Telefone {get; set; }
    public string Apartamento {get; set; }
    public string Bloco {get; set; }
    
    public Moradores (string nome, string telefone, string apartamento, string bloco){
        
        Nome = nome;
        Telefone = telefone;
        Apartamento = apartamento;
        Bloco = bloco;
    }
}

class GestaoDeCondomino{
    static void Main(){
    
    List<Moradores> lstmoradores = new List<Moradores>(); // criando a listas com base nos objetos
    List<Condominio> lstcondominio = new List<Condominio>();

    while(true){
        
        Console.WriteLine("Para cadastrar um morador, selecione uma das opções abaixo: \n");
        Console.WriteLine("\n[1] Adicione um proprietário");
        Console.WriteLine("\n[2] Exibir lista de propietários");
        Console.WriteLine("\n[3] Pesquisar um proprietário");
        Console.WriteLine("\n[4] Remover proprietário");
        Console.WriteLine("\n[5] Sair");
        
        string opcao = Console.ReadLine();
        
        switch (opcao){
            
            case "1": //switch case com as opções do usuário
            
                Console.Write("Digite o nome do propietário: ");
                string nome = Console.ReadLine();
                
                Console.Write("\nDigite o telefone do propietário: ");
                string telefone = Console.ReadLine();
                
                Console.Write("\nDigite o apartamento do propietário: ");
                string apartamento = Console.ReadLine();
                
                Console.Write("\nDigite o bloco do propietário: ");
                string bloco = Console.ReadLine();
                
                lstmoradores.Add(new Moradores(nome, telefone, apartamento, bloco)); //Está adicionando os dados na lista criada
                Console.WriteLine($"Morador {nome} adicionado com sucesso!");
                break;
                
            case "2":
                Console.Write("Lista de moradores: ");
                
                if(lstmoradores.Count == 0){
                    Console.WriteLine("Nenhum morador encontrado!");
                }
                else{
                    foreach(Moradores morador in lstmoradores){
                        Console.WriteLine($"Nome: {morador.Nome}\nTelefone: {morador.Telefone}\nApartamento: {morador.Apartamento} {morador.Bloco}");
                    }
                }
                break;
                
            case "3":
                Console.Write("A pesquisa será feita por [Nome] [Telefone] [Apartamento e Endereço]: ");
                string pequisa = Console.ReadLine();
                
                Console.Write("De acordo com a seleção a cima, selecione a opção para busca: ");
                string opcaoPesquisa = Console.ReadLine();
                
                List<Moradores> resultadoPesquisa = new List<Moradores>();
                
                if(pesquisa == "nome"){
                    resultadoPesquisa = lstmoradores.Where(m => m.Nome.ToLower().Contains(opcaoPesquisa.ToLower())).ToList();
                }
            
                else if(pesquisa == "telefone"){
                    resultadoPesquisa = lstmoradores.Where(m => m.Telefone.Tolower().Contains(opcaoPesquisa.ToLower())).ToList();
                }
                
                else if (pesquisa == "apartamento e bloco"){
                    resultadoPesquisa = lstmoradores.Where(m => m.Apartamento.ToLower().Contains(opcaoPesquisa.ToLower()) || m.Bloco.ToLower().Contains(opcaoPesquisa.ToLower())).ToList();
                }
                
                break;
        }
    }
    
}

}
